% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/code_analysis.R
\name{get_output_intermediates}
\alias{get_output_intermediates}
\title{Given an expression of fluent code, return a list of intermediate outputs.}
\usage{
get_output_intermediates(pipeline)
}
\arguments{
\item{pipeline}{an \code{expression}

TODO-refactor: make the returned object an R6 class or a structure list so we can have one location
for modification}
}
\value{
\code{list(
  intermediates = list(tibble),
  error = character(),
)}
}
\description{
If there is an error, \code{get_output_intermediates} will return outputs up to that
line, with an error message for the subsequent line at fault.
}
\examples{
\dontrun{
require(tidyverse)
"diamonds \%>\%
  select(carat, cut, color, clarity, price) \%>\%
  group_by(color) \%>\%
  summarise(n = n(), price = mean(price)) \%>\%
  arrange(desc(color))" -> pipeline
quoted <- rlang::parse_expr(pipeline)
outputs <- get_output_intermediates(quoted)

quoted <- rlang::parse_expr("select(diamonds, carat, cut, color, clarity, price)")
outputs <- get_output_intermediates(quoted)
}
}
